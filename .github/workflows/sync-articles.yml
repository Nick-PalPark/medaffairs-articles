name: Sync Articles with Rate Limiting

permissions:
  contents: write
  actions: read

on:
  repository_dispatch:
    types: [new_article]
  workflow_dispatch:
    inputs:
      force_sync:
        description: 'Force sync (bypass rate limiting)'
        required: false
        type: boolean
        default: false
  schedule:
    - cron: '0 */12 * * *'

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        
      - name: Check rate limiting
        id: rate_limit
        shell: bash
        run: |
          echo "::group::Rate Limiting Check"
          
          # Skip rate limiting for scheduled runs or if force_sync is true
          if [[ "${{ github.event_name }}" == "schedule" || "${{ inputs.force_sync }}" == "true" ]]; then
            echo "should_run=true" >> $GITHUB_OUTPUT
            echo "Scheduled run or force sync - bypassing rate limit"
            echo "::endgroup::"
            exit 0
          fi
          
          # Check for recent manual runs (within 30 minutes)
          CUTOFF_TIME=$(date -d '30 minutes ago' -u +'%Y-%m-%dT%H:%M:%SZ')
          echo "Checking for runs after: $CUTOFF_TIME"
          
          # Get recent workflow runs using GH_PAT instead of GITHUB_TOKEN
          RECENT_RUNS=$(curl -s \
            -H "Authorization: token ${{ secrets.GH_PAT }}" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/${{ github.repository }}/actions/runs?per_page=10" | \
            jq "[.workflow_runs[] | select(.created_at > \"$CUTOFF_TIME\" and .event == \"workflow_dispatch\" and .conclusion == \"success\")]")
          
          RECENT_COUNT=$(echo "$RECENT_RUNS" | jq length)
          echo "Recent manual runs in last 30 minutes: $RECENT_COUNT"
          
          if [ "$RECENT_COUNT" -gt 0 ]; then
            echo "should_run=false" >> $GITHUB_OUTPUT
            echo "last_run=$(echo "$RECENT_RUNS" | jq -r '.[0].created_at')" >> $GITHUB_OUTPUT
            echo "Rate limit hit - skipping run"
          else
            echo "should_run=true" >> $GITHUB_OUTPUT
            echo "No recent runs - proceeding"
          fi
          
          echo "::endgroup::"
