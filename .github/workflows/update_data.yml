name: Capture and publish articles.json

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'

permissions:
  contents: write

jobs:
  update:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install requirements
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Create config.py from repository secrets
        env:
          CFG_INOREADER_APP_ID: ${{ secrets.INOREADER_APP_ID }}
          CFG_INOREADER_APP_KEY: ${{ secrets.INOREADER_APP_KEY }}
          CFG_INOREADER_USERNAME: ${{ secrets.INOREADER_USERNAME }}
          CFG_INOREADER_PASSWORD: ${{ secrets.INOREADER_PASSWORD }}
        run: |
          cat > config_template.tmp <<'PY'
          # Auto-generated config.py for capture_articles.py - DO NOT COMMIT
          # Populate any additional variables here that are required by config_template.py
          INOREADER_APP_ID = "${CFG_INOREADER_APP_ID}"
          INOREADER_APP_KEY = "${CFG_INOREADER_APP_KEY}"
          INOREADER_USERNAME = "${CFG_INOREADER_USERNAME}"
          INOREADER_PASSWORD = "${CFG_INOREADER_PASSWORD}"
          
          # API endpoints
          INOREADER_API_BASE = "https://www.inoreader.com/reader/api/0/"
          INOREADER_AUTH_URL = "https://www.inoreader.com/oauth2/token"
          
          # Output settings
          ARTICLES_DIR = "articles"
          MAX_ARTICLES = 50
          DAYS_BACK = 7
          PY
          envsubst < config_template.tmp > config.py
          rm config_template.tmp

      - name: Debug - show config.py exists
        run: |
          echo "config.py created"
          ls -la config.py

      - name: Run capture script
        run: |
          python3 capture_articles.py

      - name: Generate articles.json
        run: |
          python3 scripts/generate_articles_json.py

      - name: Commit & push changes if any
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          if [ -n "$(git status --porcelain)" ]; then
            git add -A
            git commit -m "Regenerate articles.json: $(date -u +'%Y-%m-%d %H:%M:%S UTC')"
            git push
          else
            echo "No changes"
          fi

      - name: Trigger site sync
        run: |
          curl -sS -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: token ${{ secrets.MEDAFFAIRS_TECH_PAT }}" \
            https://api.github.com/repos/Nick-PalPark/medaffairs.tech/dispatches \
            -d '{"event_type":"medaffairs-articles-updated"}'